paths:
  /groups:
    get:
      security:
        - wazo_auth_token: []
      produces:
        - application/json
      summary: List groups
      description: '**Required ACL:** `auth.groups.read`'
      operationId: listGroups
      tags:
        - groups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/search_uuid'
      - $ref: '#/parameters/search_name'
      - $ref: '#/parameters/search_user_uuid'
      - $ref: '#/parameters/search_read_only'
      - $ref: '#/parameters/search_policy_slug'
      - $ref: '#/parameters/search_policy_uuid'
      responses:
        '200':
          description: A list of group
          schema:
            $ref: '#/definitions/GetGroupsResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
        - wazo_auth_token: []
      consumes:
        - application/json
      produces:
        - application/json
      summary: Create a new group
      description: '**Required ACL:** `auth.groups.create`'
      operationId: createGroups
      tags:
        - groups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - name: body
        in: body
        description: The group creation parameters
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '200':
          description: The created group's data
          schema:
            $ref: '#/definitions/GroupResult'
        '401':
          description: Invalid data has been supplied'
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate Group
          schema:
            $ref: '#/definitions/Error'
  /groups/{group_uuid}:
    get:
      tags:
        - groups
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.groups.{group_uuid}.read'
      parameters:
        - $ref: '#/parameters/tenantuuid'
        - $ref: '#/parameters/group_uuid'
      summary: Retrieves the details of a group
      responses:
        '200':
          description: "The group's data"
          schema:
            $ref: '#/definitions/GroupResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Group not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: delete_group
      tags:
        - groups
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.groups.{group_uuid}.delete`'
      parameters:
        - $ref: '#/parameters/tenantuuid'
        - $ref: '#/parameters/group_uuid'
      summary: Delete a group
      responses:
        '204':
          description: The group has been removed
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Group not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - wazo_auth_token: []
      consumes:
        - application/json
      produces:
        - application/json
      summary: Modify a group
      description: '**Required ACL:** `auth.groups.{group_uuid}.update`'
      operationId: editGroups
      tags:
        - groups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/group_uuid'
      - name: body
        in: body
        description: The group parameters
        required: true
        schema:
          $ref: '#/definitions/GroupPut'
      responses:
        '200':
          description: "The modified group's data"
          schema:
            $ref: '#/definitions/GroupResult'
        '401':
          description: Invalid data has been supplied
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate Group
          schema:
            $ref: '#/definitions/Error'
parameters:
  group_uuid:
    name: group_uuid
    in: path
    type: string
    description: The UUID of the group
    required: true
  search_uuid:
    name: uuid
    in: query
    type: string
    description: The UUID of the group
    required: false
  search_name:
    name: name
    in: query
    type: string
    description: The name of the group
    required: false
  search_user_uuid:
    name: user_uuid
    in: query
    type: string
    description: The UUID of the user
    required: false
  search_read_only:
    name: read_only
    in: query
    type: string
    description: Is the group managed by the system?
    required: false
  search_policy_uuid:
    name: policy_uuid
    in: query
    type: string
    description: The UUID of the policy that the group must have.
  search_policy_slug:
    name: policy_slug
    in: query
    type: string
    description: The slug of the policy that the group must have.
definitions:
  GetGroupsResult:
    type: object
    properties:
      total:
        type: integer
        description: The number of groups.
      filtered:
        type: integer
        description: The number of groups matching the searched term.
      items:
        type: array
        items:
          $ref: '#/definitions/GroupResult'
        description: A paginated list of groups
    required:
    - filtered
    - total
    - items
  Group:
    type: object
    properties:
      name:
        type: string
      slug:
        type: string
        default: <name>
    required:
      - name
  GroupPut:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  GroupResult:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      slug:
        type: string
      tenant_uuid:
        type: string
      system_managed:
        type: boolean
        description: '*Deprecated* Please use `read_only`'
      read_only:
        type: boolean
